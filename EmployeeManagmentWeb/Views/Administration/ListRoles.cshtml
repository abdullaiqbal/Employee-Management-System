@using ContosoUniversity
@*@model PaginatedList<IEnumerable<IdentityRole>>*@
@model PaginatedList<IdentityRole>

@{
    ViewBag.Title = "All Roles";
}

<h1><a asp-action="ListRoles" asp-route-sortOrder="@ViewData["NameSortParm"]">All Roles</a></h1>
<div>
<form asp-action="ListRoles" method="get">
    <div class="form-actions no-color">
        <p>
            Find by Role Name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="ListRoles">Back to Full List</a>
        </p>
    </div>
</form>
</div>
@if (Model.Any())
{
    <a class="btn btn-primary mb-3" style="width:auto" asp-action="CreateRole"
   asp-controller="administration">Add new role</a>

    foreach (var role in Model)
    {
        <div class="card mb-3">
            <div class="card-header">
                Role Id : @role.Id
            </div>
            <div class="card-body">
                <h5 class="card-title"> @role.Name</h5>
            </div>
            <div class="card-footer">
                <form asp-action="DeleteRole" asp-route-id="@role.Id" method="post">
                <a asp-controller="Administration" asp-action="EditRole"
                     asp-route-id="@role.Id" class="btn btn-primary">
                    Edit
                </a>
                    <span id="confirmDeleteSpan_@role.Id" style="display:none">
                        <span>Are you sure you want to delete?</span>
                        <button type="submit" class="btn btn-danger">Yes</button>
                        <a href="#" class="btn btn-primary"
                   onclick="confirmDelete('@role.Id', false)">No</a>
                    </span>

                    <span id="deleteSpan_@role.Id">
                        <a href="#" class="btn btn-danger"
                        onclick="confirmDelete('@role.Id', true)">Delete</a>
                    </span>
                </form>
            </div>
        </div>
    }


    
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    

<a asp-action="ListRoles"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="ListRoles"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

}
else
{
    <div class="card">
        <div class="card-header">
            No roles created yet
        </div>
        <div class="card-body">
            <h5 class="card-title">
                Use the button below to create a role
            </h5>
            <a class="btn btn-primary" style="width:auto"
           asp-controller="administration" asp-action="CreateRole">
                Create Role
            </a>
        </div>
    </div>
}

@section Scripts {
    <script src="~/js/CustomScript.js"></script>
}